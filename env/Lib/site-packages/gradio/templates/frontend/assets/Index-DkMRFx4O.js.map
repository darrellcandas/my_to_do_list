{"version":3,"file":"Index-DkMRFx4O.js","sources":["../../../../js/dataframe/shared/EditableCell.svelte","../../../../js/dataframe/shared/VirtualTable.svelte","../../../../js/dataframe/shared/Arrow.svelte","../../../../js/dataframe/shared/CellMenu.svelte","../../../../js/dataframe/shared/Table.svelte","../../../../js/dataframe/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown-code\";\n\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let select_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\texport let root: string;\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\t\tif (select_on_focus) {\n\t\t\tnode.select();\n\t\t}\n\n\t\tnode.focus();\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\trole=\"textbox\"\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\tuse:use_focus\n\t\ton:keydown\n\t/>\n{/if}\n\n<span\n\ton:dblclick\n\ttabindex=\"-1\"\n\trole=\"button\"\n\tclass:edit\n\ton:focus|preventDefault\n\tstyle={styling}\n>\n\t{#if datatype === \"html\"}\n\t\t{@html value}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={value.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t\t{root}\n\t\t/>\n\t{:else}\n\t\t{editable ? value : display_value || value}\n\t{/if}\n</span>\n\n<style>\n\tinput {\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tbottom: var(--size-2);\n\t\tleft: var(--size-2);\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\toutline: none;\n\t\tpadding: var(--size-2);\n\t\t-webkit-user-select: text;\n\t\t-moz-user-select: text;\n\t\t-ms-user-select: text;\n\t\tuser-select: text;\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont: var(--weight-bold);\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 20;\n\texport let selected: number | false;\n\tlet height = \"100%\";\n\n\tlet average_height = 30;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport: HTMLTableElement;\n\tlet viewport_height = 200;\n\tlet visible: { index: number; data: any[] }[] = [];\n\tlet viewport_box: DOMRectReadOnly;\n\n\t$: viewport_height = viewport_box?.height || 200;\n\n\tconst is_browser = typeof window !== \"undefined\";\n\tconst raf = is_browser\n\t\t? window.requestAnimationFrame\n\t\t: (cb: (...args: any[]) => void) => cb();\n\n\t$: mounted && raf(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\traf(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = is_browser\n\t\t? sortedItems.slice(start, end).map((data, i) => {\n\t\t\t\treturn { index: i + start, data };\n\t\t\t})\n\t\t: sortedItems\n\t\t\t\t.slice(0, (max_height / sortedItems.length) * average_height + 1)\n\t\t\t\t.map((data, i) => {\n\t\t\t\t\treturn { index: i + start, data };\n\t\t\t\t});\n\n\t$: actual_height = visible.length * average_height + 10;\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<table\n\t\tclass=\"table\"\n\t\tbind:this={viewport}\n\t\tbind:contentRect={viewport_box}\n\t\ton:scroll={handle_scroll}\n\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px\"\n\t>\n\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t<slot name=\"thead\" />\n\t\t</thead>\n\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t</slot>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</tbody>\n\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t<slot name=\"tfoot\" />\n\t\t</tfoot>\n\t</table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow-y: scroll;\n\t\toverflow-x: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: 100vh;\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\tborder-collapse: separate;\n\t}\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\toverflow: hidden;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let transform: string;\n</script>\n\n<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t<path\n\t\td=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n\t\t{transform}\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport Arrow from \"./Arrow.svelte\";\n\timport type { I18nFormatter } from \"js/utils/src\";\n\n\texport let x: number;\n\texport let y: number;\n\texport let on_add_row_above: () => void;\n\texport let on_add_row_below: () => void;\n\texport let on_add_column_left: () => void;\n\texport let on_add_column_right: () => void;\n\texport let row: number;\n\n\texport let i18n: I18nFormatter;\n\tlet menu_element: HTMLDivElement;\n\n\t$: is_header = row === -1;\n\n\tonMount(() => {\n\t\tposition_menu();\n\t});\n\n\tfunction position_menu(): void {\n\t\tif (!menu_element) return;\n\n\t\tconst viewport_width = window.innerWidth;\n\t\tconst viewport_height = window.innerHeight;\n\t\tconst menu_rect = menu_element.getBoundingClientRect();\n\n\t\tlet new_x = x - 30;\n\t\tlet new_y = y - 20;\n\n\t\tif (new_x + menu_rect.width > viewport_width) {\n\t\t\tnew_x = x - menu_rect.width + 10;\n\t\t}\n\n\t\tif (new_y + menu_rect.height > viewport_height) {\n\t\t\tnew_y = y - menu_rect.height + 10;\n\t\t}\n\n\t\tmenu_element.style.left = `${new_x}px`;\n\t\tmenu_element.style.top = `${new_y}px`;\n\t}\n</script>\n\n<div bind:this={menu_element} class=\"cell-menu\">\n\t{#if !is_header}\n\t\t<button on:click={() => on_add_row_above()}>\n\t\t\t<Arrow transform=\"rotate(-90 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_row_above\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_row_below()}>\n\t\t\t<Arrow transform=\"rotate(90 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_row_below\")}\n\t\t</button>\n\t{/if}\n\t<button on:click={() => on_add_column_left()}>\n\t\t<Arrow transform=\"rotate(180 12 12)\" />\n\t\t{i18n(\"dataframe.add_column_left\")}\n\t</button>\n\t<button on:click={() => on_add_column_right()}>\n\t\t<Arrow transform=\"rotate(0 12 12)\" />\n\t\t{i18n(\"dataframe.add_column_right\")}\n\t</button>\n</div>\n\n<style>\n\t.cell-menu {\n\t\tposition: fixed;\n\t\tz-index: var(--layer-2);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-1);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tmin-width: 150px;\n\t}\n\n\t.cell-menu button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\tpadding: var(--size-1) var(--size-2);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\ttransition:\n\t\t\tbackground-color 0.2s,\n\t\t\tcolor 0.2s;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t}\n\n\t.cell-menu button:hover {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button :global(svg) {\n\t\tfill: currentColor;\n\t\ttransition: fill 0.2s;\n\t}\n\n\t.cell-menu button:hover :global(svg) {\n\t\tfill: var(--color-accent);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dsvFormat } from \"d3-dsv\";\n\timport { dequal } from \"dequal/lite\";\n\timport { copy } from \"@gradio/utils\";\n\timport { Upload } from \"@gradio/upload\";\n\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport { type Client } from \"@gradio/client\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type { Headers, HeadersWithIDs, Metadata, Datatype } from \"./utils\";\n\timport CellMenu from \"./CellMenu.svelte\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let headers: Headers = [];\n\texport let values: (string | number)[][] = [];\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let max_height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let upload: Client[\"upload\"];\n\texport let stream_handler: Client[\"stream\"];\n\n\tlet selected: false | [number, number] = false;\n\texport let display_value: string[][] | null = null;\n\texport let styling: string[][] | null = null;\n\tlet t_rect: DOMRectReadOnly;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: {\n\t\t\tdata: (string | number)[][];\n\t\t\theaders: string[];\n\t\t\tmetadata: Metadata;\n\t\t};\n\t\tselect: SelectData;\n\t}>();\n\n\tlet editing: false | [number, number] = false;\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\n\tlet last_selected: [number, number] | null = null;\n\n\t$: {\n\t\tif (selected !== false && !dequal(selected, last_selected)) {\n\t\t\tconst [row, col] = selected;\n\t\t\tif (!isNaN(row) && !isNaN(col) && data[row]) {\n\t\t\t\tdispatch(\"select\", {\n\t\t\t\t\tindex: [row, col],\n\t\t\t\t\tvalue: get_data_at(row, col),\n\t\t\t\t\trow_value: data[row].map((d) => d.value)\n\t\t\t\t});\n\t\t\t\tlast_selected = selected;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\n\tfunction make_headers(_head: Headers): HeadersWithIDs {\n\t\tlet _h = _head || [];\n\t\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t\t_h = _h.concat(fill);\n\t\t}\n\n\t\tif (!_h || _h.length === 0) {\n\t\t\treturn Array(col_count[0])\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t\t});\n\t\t}\n\n\t\treturn _h.map((h, i) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\treturn { id: _id, value: h ?? \"\" };\n\t\t});\n\t}\n\n\tfunction process_data(_values: (string | number)[][]): {\n\t\tvalue: string | number;\n\t\tid: string;\n\t}[][] {\n\t\tconst data_row_length = _values.length;\n\t\treturn Array(\n\t\t\trow_count[1] === \"fixed\"\n\t\t\t\t? row_count[0]\n\t\t\t\t: data_row_length < row_count[0]\n\t\t\t\t\t? row_count[0]\n\t\t\t\t\t: data_row_length\n\t\t)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) =>\n\t\t\t\tArray(\n\t\t\t\t\tcol_count[1] === \"fixed\"\n\t\t\t\t\t\t? col_count[0]\n\t\t\t\t\t\t: data_row_length > 0\n\t\t\t\t\t\t\t? _values[0].length\n\t\t\t\t\t\t\t: headers.length\n\t\t\t\t)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, j) => {\n\t\t\t\t\t\tconst id = make_id();\n\t\t\t\t\t\tels[id] = els[id] || { input: null, cell: null };\n\t\t\t\t\t\tconst obj = { value: _values?.[i]?.[j] ?? \"\", id };\n\t\t\t\t\t\tdata_binding[id] = obj;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t})\n\t\t\t);\n\t}\n\n\tlet _headers = make_headers(headers);\n\tlet old_headers: string[] | undefined;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\ttrigger_headers();\n\t\t}\n\t}\n\n\tfunction trigger_headers(): void {\n\t\t_headers = make_headers(headers);\n\n\t\told_headers = headers.slice();\n\t\ttrigger_change();\n\t}\n\n\t$: if (!dequal(values, old_val)) {\n\t\tdata = process_data(values as (string | number)[][]);\n\t\told_val = values as (string | number)[][];\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\n\tasync function trigger_change(): Promise<void> {\n\t\tdispatch(\"change\", {\n\t\t\tdata: data.map((r) => r.map(({ value }) => value)),\n\t\t\theaders: _headers.map((h) => h.value),\n\t\t\tmetadata: editable\n\t\t\t\t? null\n\t\t\t\t: { display_value: display_value, styling: styling }\n\t\t});\n\t}\n\n\tfunction get_sort_status(\n\t\tname: string,\n\t\t_sort?: number,\n\t\tdirection?: SortDirection\n\t): \"none\" | \"ascending\" | \"descending\" {\n\t\tif (!_sort) return \"none\";\n\t\tif (headers[_sort] === name) {\n\t\t\tif (direction === \"asc\") return \"ascending\";\n\t\t\tif (direction === \"des\") return \"descending\";\n\t\t}\n\n\t\treturn \"none\";\n\t}\n\n\tfunction get_current_indices(id: string): [number, number] {\n\t\treturn data.reduce(\n\t\t\t(acc, arr, i) => {\n\t\t\t\tconst j = arr.reduce(\n\t\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t\t-1\n\t\t\t\t);\n\n\t\t\t\treturn j === -1 ? acc : [i, j];\n\t\t\t},\n\t\t\t[-1, -1]\n\t\t);\n\t}\n\n\tasync function start_edit(i: number, j: number): Promise<void> {\n\t\tif (!editable || dequal(editing, [i, j])) return;\n\n\t\tediting = [i, j];\n\t}\n\n\tfunction move_cursor(\n\t\tkey: \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\",\n\t\tcurrent_coords: [number, number]\n\t): void {\n\t\tconst dir = {\n\t\t\tArrowRight: [0, 1],\n\t\t\tArrowLeft: [0, -1],\n\t\t\tArrowDown: [1, 0],\n\t\t\tArrowUp: [-1, 0]\n\t\t}[key];\n\n\t\tconst i = current_coords[0] + dir[0];\n\t\tconst j = current_coords[1] + dir[1];\n\n\t\tif (i < 0 && j <= 0) {\n\t\t\tselected_header = j;\n\t\t\tselected = false;\n\t\t} else {\n\t\t\tconst is_data = data[i]?.[j];\n\t\t\tselected = is_data ? [i, j] : selected;\n\t\t}\n\t}\n\n\tlet clear_on_focus = false;\n\t// eslint-disable-next-line complexity\n\tasync function handle_keydown(event: KeyboardEvent): Promise<void> {\n\t\tif (selected_header !== false && header_edit === false) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tselected = [0, selected_header];\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header > 0 ? selected_header - 1 : selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header < _headers.length - 1\n\t\t\t\t\t\t\t? selected_header + 1\n\t\t\t\t\t\t\t: selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Enter\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!selected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [i, j] = selected;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowRight\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tif (editing) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tmove_cursor(event.key, [i, j]);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Escape\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tadd_row(i);\n\t\t\t\t\tawait tick();\n\n\t\t\t\t\tselected = [i + 1, j];\n\t\t\t\t} else {\n\t\t\t\t\tif (dequal(editing, [i, j])) {\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tselected = [i, j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tediting = [i, j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Delete\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Tab\":\n\t\t\t\tlet direction = event.shiftKey ? -1 : 1;\n\n\t\t\t\tlet is_data_x = data[i][j + direction];\n\t\t\t\tlet is_data_y =\n\t\t\t\t\tdata?.[i + direction]?.[direction > 0 ? 0 : _headers.length - 1];\n\n\t\t\t\tif (is_data_x || is_data_y) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected = is_data_x\n\t\t\t\t\t\t? [i, j + direction]\n\t\t\t\t\t\t: [i + direction, direction > 0 ? 0 : _headers.length - 1];\n\t\t\t\t}\n\t\t\t\tediting = false;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (\n\t\t\t\t\t(!editing || (editing && dequal(editing, [i, j]))) &&\n\t\t\t\t\tevent.key.length === 1\n\t\t\t\t) {\n\t\t\t\t\tclear_on_focus = true;\n\t\t\t\t\tediting = [i, j];\n\t\t\t\t}\n\t\t}\n\t}\n\n\tlet active_cell: { row: number; col: number } | null = null;\n\n\tasync function handle_cell_click(i: number, j: number): Promise<void> {\n\t\tif (active_cell && active_cell.row === i && active_cell.col === j) {\n\t\t\tactive_cell = null;\n\t\t} else {\n\t\t\tactive_cell = { row: i, col: j };\n\t\t}\n\t\tif (dequal(editing, [i, j])) return;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\tediting = false;\n\t\tif (!dequal(selected, [i, j])) {\n\t\t\tselected = [i, j];\n\t\t\tawait tick();\n\t\t\tparent.focus();\n\t\t}\n\t}\n\n\ttype SortDirection = \"asc\" | \"des\";\n\tlet sort_direction: SortDirection | undefined;\n\tlet sort_by: number | undefined;\n\n\tfunction handle_sort(col: number): void {\n\t\tif (typeof sort_by !== \"number\" || sort_by !== col) {\n\t\t\tsort_direction = \"asc\";\n\t\t\tsort_by = col;\n\t\t} else {\n\t\t\tif (sort_direction === \"asc\") {\n\t\t\t\tsort_direction = \"des\";\n\t\t\t} else if (sort_direction === \"des\") {\n\t\t\t\tsort_direction = \"asc\";\n\t\t\t}\n\t\t}\n\t}\n\n\tlet header_edit: number | false;\n\n\tlet select_on_focus = false;\n\tlet selected_header: number | false = false;\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tselected = false;\n\t\tselected_header = i;\n\t\theader_edit = i;\n\t\tselect_on_focus = _select;\n\t}\n\n\tfunction end_header_edit(event: KeyboardEvent): void {\n\t\tif (!editable) return;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Enter\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tselected = false;\n\t\t\t\tselected_header = header_edit;\n\t\t\t\theader_edit = false;\n\t\t\t\tparent.focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length === 0) {\n\t\t\tvalues = [Array(headers.length).fill(\"\")];\n\t\t\treturn;\n\t\t}\n\n\t\tconst new_row = Array(data[0].length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t});\n\n\t\tif (index !== undefined && index >= 0 && index <= data.length) {\n\t\t\tdata.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tdata.push(new_row);\n\t\t}\n\n\t\tdata = data;\n\t\tselected = [index !== undefined ? index : data.length - 1, 0];\n\t}\n\n\t$: (data || selected_header) && trigger_change();\n\n\tasync function add_col(index?: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\n\t\tconst insert_index = index !== undefined ? index : data[0].length;\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata[i].splice(insert_index, 0, { id: _id, value: \"\" });\n\t\t}\n\n\t\theaders.splice(insert_index, 0, `Header ${headers.length + 1}`);\n\n\t\tdata = data;\n\t\theaders = headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(insert_index, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tif (\n\t\t\t(active_cell_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\")) ||\n\t\t\t(active_header_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\"))\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t\tactive_header_menu = null;\n\t\t}\n\n\t\tevent.stopImmediatePropagation();\n\t\tconst [trigger] = event.composedPath() as HTMLElement[];\n\t\tif (parent.contains(trigger)) {\n\t\t\treturn;\n\t\t}\n\n\t\tediting = false;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\treset_selection();\n\t\tactive_cell = null;\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction guess_delimitaor(\n\t\ttext: string,\n\t\tpossibleDelimiters: string[]\n\t): string[] {\n\t\treturn possibleDelimiters.filter(weedOut);\n\n\t\tfunction weedOut(delimiter: string): boolean {\n\t\t\tvar cache = -1;\n\t\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\t\tfunction checkLength(line: string): boolean {\n\t\t\t\tif (!line) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar length = line.split(delimiter).length;\n\t\t\t\tif (cache < 0) {\n\t\t\t\t\tcache = length;\n\t\t\t\t}\n\t\t\t\treturn cache === length && length > 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction data_uri_to_blob(data_uri: string): Blob {\n\t\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\t\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n\t\tconst ab = new ArrayBuffer(byte_str.length);\n\t\tconst ia = new Uint8Array(ab);\n\n\t\tfor (let i = 0; i < byte_str.length; i++) {\n\t\t\tia[i] = byte_str.charCodeAt(i);\n\t\t}\n\n\t\treturn new Blob([ab], { type: mime_str });\n\t}\n\n\tfunction blob_to_string(blob: Blob): void {\n\t\tconst reader = new FileReader();\n\n\t\tfunction handle_read(e: ProgressEvent<FileReader>): void {\n\t\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\n\t\t\tconst [delimiter] = guess_delimitaor(e.target.result, [\",\", \"\\t\"]);\n\n\t\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\n\t\t\t_headers = make_headers(\n\t\t\t\tcol_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head\n\t\t\t);\n\n\t\t\tvalues = rest;\n\t\t\treader.removeEventListener(\"loadend\", handle_read);\n\t\t}\n\n\t\treader.addEventListener(\"loadend\", handle_read);\n\n\t\treader.readAsText(blob);\n\t}\n\n\tlet dragging = false;\n\n\tfunction get_max(\n\t\t_d: { value: any; id: string }[][]\n\t): { value: any; id: string }[] {\n\t\tlet max = _d[0].slice();\n\t\tfor (let i = 0; i < _d.length; i++) {\n\t\t\tfor (let j = 0; j < _d[i].length; j++) {\n\t\t\t\tif (`${max[j].value}`.length < `${_d[i][j].value}`.length) {\n\t\t\t\t\tmax[j] = _d[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\t$: max = get_max(data);\n\n\t$: cells[0] && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\n\tfunction set_cell_widths(): void {\n\t\tconst widths = cells.map((el, i) => {\n\t\t\treturn el?.clientWidth || 0;\n\t\t});\n\t\tif (widths.length === 0) return;\n\t\tfor (let i = 0; i < widths.length; i++) {\n\t\t\tparent.style.setProperty(\n\t\t\t\t`--cell-width-${i}`,\n\t\t\t\t`${widths[i] - scrollbar_width / widths.length}px`\n\t\t\t);\n\t\t}\n\t}\n\n\tlet table_height: number =\n\t\tvalues.slice(0, (max_height / values.length) * 37).length * 37 + 37;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null,\n\t\tcol?: number,\n\t\tdir?: SortDirection\n\t): void {\n\t\tlet id = null;\n\t\t//Checks if the selected cell is still in the data\n\t\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\t\tid = data[selected[0]][selected[1]].id;\n\t\t}\n\t\tif (typeof col !== \"number\" || !dir) {\n\t\t\treturn;\n\t\t}\n\t\tconst indices = [...Array(_data.length).keys()];\n\n\t\tif (dir === \"asc\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value < _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else if (dir === \"des\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value > _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// sort all the data and metadata based on the values in the data\n\t\tconst temp_data = [..._data];\n\t\tconst temp_display_value = _display_value ? [..._display_value] : null;\n\t\tconst temp_styling = _styling ? [..._styling] : null;\n\t\tindices.forEach((originalIndex, sortedIndex) => {\n\t\t\t_data[sortedIndex] = temp_data[originalIndex];\n\t\t\tif (_display_value && temp_display_value)\n\t\t\t\t_display_value[sortedIndex] = temp_display_value[originalIndex];\n\t\t\tif (_styling && temp_styling)\n\t\t\t\t_styling[sortedIndex] = temp_styling[originalIndex];\n\t\t});\n\n\t\tdata = data;\n\n\t\tif (id) {\n\t\t\tconst [i, j] = get_current_indices(id);\n\t\t\tselected = [i, j];\n\t\t}\n\t}\n\n\t$: sort_data(data, display_value, styling, sort_by, sort_direction);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n\n\tlet highlighted_column: number | null = null;\n\n\tlet active_cell_menu: {\n\t\trow: number;\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tfunction toggle_cell_menu(event: MouseEvent, row: number, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tactive_cell_menu &&\n\t\t\tactive_cell_menu.row === row &&\n\t\t\tactive_cell_menu.col === col\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t} else {\n\t\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\t\tif (cell) {\n\t\t\t\tconst rect = cell.getBoundingClientRect();\n\t\t\t\tactive_cell_menu = {\n\t\t\t\t\trow,\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction add_row_at(index: number, position: \"above\" | \"below\"): void {\n\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\tadd_row(row_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction add_col_at(index: number, position: \"left\" | \"right\"): void {\n\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\tadd_col(col_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tonMount(() => {\n\t\tdocument.addEventListener(\"click\", handle_click_outside);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"click\", handle_click_outside);\n\t\t};\n\t});\n\n\tlet active_button: {\n\t\ttype: \"header\" | \"cell\";\n\t\trow?: number;\n\t\tcol: number;\n\t} | null = null;\n\n\tfunction toggle_header_button(col: number): void {\n\t\tif (active_button?.type === \"header\" && active_button.col === col) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"header\", col };\n\t\t}\n\t}\n\n\tfunction toggle_cell_button(row: number, col: number): void {\n\t\tif (\n\t\t\tactive_button?.type === \"cell\" &&\n\t\t\tactive_button.row === row &&\n\t\t\tactive_button.col === col\n\t\t) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"cell\", row, col };\n\t\t}\n\t}\n\n\tlet active_header_menu: {\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tfunction toggle_header_menu(event: MouseEvent, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (active_header_menu && active_header_menu.col === col) {\n\t\t\tactive_header_menu = null;\n\t\t} else {\n\t\t\tconst header = (event.target as HTMLElement).closest(\"th\");\n\t\t\tif (header) {\n\t\t\t\tconst rect = header.getBoundingClientRect();\n\t\t\t\tactive_header_menu = {\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction reset_selection(): void {\n\t\tselected = false;\n\t\tlast_selected = null;\n\t}\n</script>\n\n<svelte:window\n\ton:click={handle_click_outside}\n\ton:touchstart={handle_click_outside}\n\ton:resize={() => set_cell_widths()}\n/>\n\n<div class:label={label && label.length !== 0} use:copy>\n\t{#if label && label.length !== 0 && show_label}\n\t\t<p>\n\t\t\t{label}\n\t\t</p>\n\t{/if}\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px\"\n\t\ton:keydown={(e) => handle_keydown(e)}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table\n\t\t\tbind:contentRect={t_rect}\n\t\t\tbind:this={table}\n\t\t\tclass:fixed-layout={column_widths.length != 0}\n\t\t>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:editing={header_edit === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle:width={column_widths.length ? column_widths[i] : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={(e) => blob_to_string(data_uri_to_blob(e.detail.data))}\n\t\t\tbind:dragging\n\t\t>\n\t\t\t<VirtualTable\n\t\t\t\tbind:items={data}\n\t\t\t\t{max_height}\n\t\t\t\tbind:actual_height={table_height}\n\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\tselected={selected_index}\n\t\t\t>\n\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t{/if}\n\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:focus={header_edit === i || selected_header === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle=\"width: var(--cell-width-{i});\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\ttoggle_header_button(i);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<div class=\"header-content\">\n\t\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\t\t\t\t\t\ton:keydown={end_header_edit}\n\t\t\t\t\t\t\t\t\t\ton:dblclick={() => edit_header(i)}\n\t\t\t\t\t\t\t\t\t\t{select_on_focus}\n\t\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<!-- TODO: fix -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore a11y-no-static-element-interactions-->\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction}\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\thandle_sort(i);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\tclass:visible={active_button?.type === \"header\" &&\n\t\t\t\t\t\t\t\t\t\t\tactive_button.col === i}\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_header_menu(event, i)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\n\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row_odd={index % 2 === 0}>\n\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\ton:touchstart={() => start_edit(index, j)}\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\thandle_cell_click(index, j);\n\t\t\t\t\t\t\t\ttoggle_cell_button(index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:dblclick={() => start_edit(index, j)}\n\t\t\t\t\t\t\tstyle:width=\"var(--cell-width-{j})\"\n\t\t\t\t\t\t\tstyle={styling?.[index]?.[j] || \"\"}\n\t\t\t\t\t\t\tclass:focus={dequal(selected, [index, j])}\n\t\t\t\t\t\t\tclass:menu-active={active_cell_menu &&\n\t\t\t\t\t\t\t\tactive_cell_menu.row === index &&\n\t\t\t\t\t\t\t\tactive_cell_menu.col === j}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={data[index][j].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\tdisplay_value={display_value?.[index]?.[j]}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\tedit={dequal(editing, [index, j])}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\ton:blur={() => ((clear_on_focus = false), parent.focus())}\n\t\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\tclass:visible={active_button?.type === \"cell\" &&\n\t\t\t\t\t\t\t\t\t\t\tactive_button.row === index &&\n\t\t\t\t\t\t\t\t\t\t\tactive_button.col === j}\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_cell_menu(event, index, j)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</VirtualTable>\n\t\t</Upload>\n\t</div>\n</div>\n\n{#if active_cell_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_cell_menu.x}\n\t\ty={active_cell_menu.y}\n\t\trow={active_cell_menu?.row ?? -1}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_cell_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() => add_col_at(active_cell_menu?.col ?? -1, \"right\")}\n\t/>\n{/if}\n\n{#if active_header_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_header_menu.x}\n\t\ty={active_header_menu.y}\n\t\trow={-1}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_header_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() =>\n\t\t\tadd_col_at(active_header_menu?.col ?? -1, \"right\")}\n\t/>\n{/if}\n\n<style>\n\t.button-wrap:hover svg {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.button-wrap svg {\n\t\tmargin-right: var(--size-1);\n\t\tmargin-left: -5px;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin-bottom: var(--size-2);\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t\tbackground-color: none;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\ttable.fixed-layout {\n\t\ttable-layout: fixed;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n\n\ttr > * + * {\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth,\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tpadding: 0;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t}\n\n\tth.focus,\n\ttd.focus,\n\ttd.menu-active {\n\t\tz-index: 1;\n\t}\n\n\ttr:last-child td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\ttr:last-child td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\ttr th {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tth svg {\n\t\tfill: currentColor;\n\t\tfont-size: 10px;\n\t}\n\n\t.sort-button {\n\t\tdisplay: flex;\n\t\tflex: none;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 150ms;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tcolor: var(--body-text-color-subdued);\n\t\tline-height: var(--text-sm);\n\t}\n\n\t.sort-button:hover {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.des {\n\t\ttransform: scaleY(-1);\n\t}\n\n\t.sort-button.sorted {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.editing {\n\t\tbackground: var(--table-editing);\n\t}\n\n\t.cell-wrap {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\toutline: none;\n\t\theight: var(--size-full);\n\t\tmin-height: var(--size-9);\n\t\toverflow: hidden;\n\t}\n\n\t.header-content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t\tmin-width: 0;\n\t}\n\n\t.row_odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.row_odd.focus {\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\ttable {\n\t\tborder-collapse: separate;\n\t}\n\n\t.select-column {\n\t\twidth: var(--size-3);\n\t\ttext-align: center;\n\t\tpadding: var(--size-1);\n\t\tborder-right: none;\n\t}\n\n\t.cell-menu-button {\n\t\tflex-shrink: 0;\n\t\tdisplay: none;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--block-radius);\n\t\twidth: var(--size-5);\n\t\theight: var(--size-5);\n\t\tmin-width: var(--size-5);\n\t\tpadding: 0;\n\t\tmargin-right: var(--spacing-sm);\n\t\tz-index: var(--layer-2);\n\t}\n\n\t.cell-menu-button:hover {\n\t\tbackground-color: var(--color-bg-hover);\n\t}\n\n\t.cell-menu-button.visible {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\tth .cell-wrap {\n\t\tpadding-right: var(--spacing-sm);\n\t}\n\n\tth .header-content {\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n</style>\n","<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport { afterUpdate, tick } from \"svelte\";\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Data, Metadata, Datatype } from \"./shared/utils\";\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: { data: Data; headers: Headers; metadata: Metadata } = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\tlet old_value = \"\";\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let max_height: number | undefined = undefined;\n\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\n\tlet _headers: Headers;\n\tlet display_value: string[][] | null;\n\tlet styling: string[][] | null;\n\tlet values: (string | number)[][];\n\tasync function handle_change(data?: {\n\t\tdata: Data;\n\t\theaders: Headers;\n\t\tmetadata: Metadata;\n\t}): Promise<void> {\n\t\tlet _data = data || value;\n\n\t\t_headers = [...(_data.headers || headers)];\n\t\tvalues = _data.data ? [..._data.data] : [];\n\t\tdisplay_value = _data?.metadata?.display_value\n\t\t\t? [..._data?.metadata?.display_value]\n\t\t\t: null;\n\t\tstyling =\n\t\t\t!interactive && _data?.metadata?.styling\n\t\t\t\t? [..._data?.metadata?.styling]\n\t\t\t\t: null;\n\t\tawait tick();\n\n\t\tgradio.dispatch(\"change\");\n\t\tif (!value_is_output) {\n\t\t\tgradio.dispatch(\"input\");\n\t\t}\n\t}\n\n\thandle_change();\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\n\t$: {\n\t\tif (old_value && JSON.stringify(value) !== old_value) {\n\t\t\told_value = JSON.stringify(value);\n\t\t\thandle_change();\n\t\t}\n\t}\n\n\tif (\n\t\t(Array.isArray(value) && value?.[0]?.length === 0) ||\n\t\tvalue.data?.[0]?.length === 0\n\t) {\n\t\tvalue = {\n\t\t\tdata: [Array(col_count?.[0] || 3).fill(\"\")],\n\t\t\theaders: Array(col_count?.[0] || 3)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + 1}`),\n\t\t\tmetadata: null\n\t\t};\n\t}\n\n\tasync function handle_value_change(data: {\n\t\tdata: Data;\n\t\theaders: Headers;\n\t\tmetadata: Metadata;\n\t}): Promise<void> {\n\t\tif (JSON.stringify(data) !== old_value) {\n\t\t\tvalue = { ...data };\n\t\t\told_value = JSON.stringify(value);\n\t\t\thandle_change(data);\n\t\t}\n\t}\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{show_label}\n\t\t{row_count}\n\t\t{col_count}\n\t\t{values}\n\t\t{display_value}\n\t\t{styling}\n\t\theaders={_headers}\n\t\ton:change={(e) => handle_value_change(e.detail)}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{max_height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t\tupload={(...args) => gradio.client.upload(...args)}\n\t\tstream_handler={(...args) => gradio.client.stream(...args)}\n\t/>\n</Block>\n"],"names":["createEventDispatcher","insert","target","input","anchor","ctx","set_data","t_value","dirty","markdowncode_changes","create_if_block_2","span","edit","$$props","value","display_value","styling","header","datatype","latex_delimiters","clear_on_focus","select_on_focus","line_breaks","editable","root","dispatch","el","use_focus","node","$$invalidate","_value","handle_blur","currentTarget","$$value","tick","get_key","i","create_if_block","height","svelte_virtual_table_viewport","append","table","thead","tbody","tfoot","get_computed_px_amount","elem","property","compStyle","items","max_height","actual_height","table_scrollbar_width","start","end","selected","average_height","bottom","contents","head_height","foot_height","height_map","mounted","rows","top","viewport","viewport_height","visible","viewport_box","is_browser","raf","cb","content_height","refresh_height_map","_items","scrollTop","row","_h","row_height","remaining","scrollbar_height","filtered_height_map","v","a","b","scroll_and_render","n","direction","is_in_view","scroll_to_index","current","viewport_top","handle_scroll","e","scroll_top","is_start_overflow","sortedItems","row_top_border","actual_border_collapsed_width","new_start","y","row_heights","remaining_height","index","opts","align_end","_itemHeight","distance","_opts","onMount","ResizeObserverSingleton","data","svg","path","transform","t1_value","t4_value","button0","button1","t1","t4","t2_value","t5_value","div","t2","t5","x","on_add_row_above","on_add_row_below","on_add_column_left","on_add_column_right","i18n","menu_element","position_menu","viewport_width","menu_rect","new_x","new_y","is_header","p","caption","toggle_class","div0","attr","th","th_aria_sort_value","set_style","div1","td","if_block","create_if_block_4","button","create_if_block_3","div2","editablecell_changes","tr","dequal","editablecell_props","td_style_value","style_changed","cellmenu_changes","if_block0","create_if_block_6","if_block1","create_if_block_5","if_block2","create_if_block_1","if_block3","table_1","tr0","tr1","make_id","guess_delimitaor","text","possibleDelimiters","weedOut","delimiter","cache","checkLength","line","length","data_uri_to_blob","data_uri","byte_str","mime_str","ab","ia","label","show_label","headers","values","col_count","row_count","wrap","column_widths","upload","stream_handler","t_rect","editing","get_data_at","col","last_selected","els","make_headers","_head","fill","_","_id","h","process_data","_values","data_row_length","j","id","_headers","old_headers","trigger_headers","trigger_change","old_val","r","get_sort_status","name","_sort","get_current_indices","acc","arr","_acc","_data","k","start_edit","move_cursor","key","current_coords","dir","selected_header","is_data","handle_keydown","event","header_edit","add_row","is_data_x","is_data_y","active_cell","handle_cell_click","parent","sort_direction","sort_by","handle_sort","edit_header","_select","end_header_edit","new_row","add_col","insert_index","new_w","handle_click_outside","active_cell_menu","active_header_menu","trigger","reset_selection","blob_to_string","blob","reader","handle_read","head","rest","dsvFormat","dragging","get_max","_d","max","cells","set_cell_widths","widths","scrollbar_width","table_height","sort_data","_display_value","_styling","indices","temp_data","temp_display_value","temp_styling","originalIndex","sortedIndex","is_visible","observer","entries","entry","toggle_cell_menu","cell","rect","add_row_at","position","row_index","add_col_at","col_index","active_button","toggle_header_button","toggle_cell_button","toggle_header_menu","$$self","blur_handler","click_handler","dblclick_handler_1","click_handler_3","func","func_1","func_2","func_3","func_4","func_5","func_6","func_7","d","selected_index","table_changes","elem_id","elem_classes","old_value","value_is_output","scale","min_width","gradio","loading_status","interactive","handle_change","afterUpdate","handle_value_change","clear_status_handler","args","change_handler"],"mappings":"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"}